{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\GoLang-Project\\\\39-Golang-react-todo-app\\\\client\\\\src\\\\To-Do-List.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Header, Form, Input, Icon } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet endpoint = \"http://localhost:9000\";\n\nclass ToDoList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      let {\n        task\n      } = this.state;\n\n      if (task) {\n        axios.post(endpoint + \"/api/task\", {\n          task\n        }, {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n          }\n        }).then(res => {\n          this.getTask();\n          this.setState({\n            task: \"\"\n          });\n          console.log(res);\n        });\n      }\n    };\n\n    this.getTask = () => {\n      axios.get(endpoint + \"/api/tasks\").then(res => {\n        if (res.data) {\n          console.log(res.data);\n          this.setState({\n            items: res.data.map(item => {\n              let color = \"yellow\";\n              let style = {\n                wordWrap: \"break-word\"\n              };\n\n              if (item.status) {\n                color = \"green\";\n                style[\"textDecorationLine\"] = \"line-through\";\n              }\n\n              return /*#__PURE__*/_jsxDEV(Card, {\n                color: color,\n                fluid: true,\n                className: \"rough\",\n                children: /*#__PURE__*/_jsxDEV(Card.Content, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                    textAlign: \"left\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: style,\n                      children: item.task\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                    textAlign: \"right\",\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"check circle\",\n                      color: \"blue\",\n                      onClick: () => this.updateTask(item._id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        paddingRight: 10\n                      },\n                      children: \"Done\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"undo\",\n                      color: \"yellow\",\n                      onClick: () => this.undoTask(item._id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        paddingRight: 10\n                      },\n                      children: \"Undo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                      name: \"delete\",\n                      color: \"red\",\n                      onClick: () => this.deleteTask(item._id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        paddingRight: 10\n                      },\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 33\n                }, this)\n              }, item._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this);\n            })\n          });\n        } else {\n          this.setState({\n            items: []\n          });\n        }\n      });\n    };\n\n    this.updateTask = id => {\n      axios.put(endpoint + \"/api/tasks/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log('update');\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.undoTask = id => {\n      axios.put(endpoint + \"/api/undoTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.deleteTask = id => {\n      axios.delete(endpoint + \"/api/deleteTask/\" + id, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      }).then(res => {\n        console.log(res);\n        this.getTask();\n      });\n    };\n\n    this.state = {\n      task: \"\",\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTask();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          className: \"header\",\n          as: \"h2\",\n          color: \"yellow\",\n          children: \"To Do List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.onSubmit,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"task\",\n              onChange: this.onChange,\n              value: this.state.task,\n              fluid: true,\n              placeholder: \"Create Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Card.Group, {\n            children: this.state.items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["C:/Users/hp/Desktop/GoLang-Project/39-Golang-react-todo-app/client/src/To-Do-List.js"],"names":["React","Component","axios","Card","Header","Form","Input","Icon","endpoint","ToDoList","constructor","props","onChange","event","setState","target","name","value","onSubmit","task","state","post","headers","then","res","getTask","console","log","get","data","items","map","item","color","style","wordWrap","status","updateTask","_id","paddingRight","undoTask","deleteTask","id","put","delete","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport {Card, Header, Form, Input, Icon} from \"semantic-ui-react\";\n\n\nlet endpoint = \"http://localhost:9000\";\n\nclass ToDoList extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            task: \"\",\n            items: [],\n        };\n    }\n    componentDidMount(){\n        this.getTask();\n    }\n\n    onChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n\n    onSubmit = () => {\n        let {task} = this.state;\n        if(task){\n            axios.post(endpoint + \"/api/task\",\n                {task,},\n                {headers:{\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                }\n            ).then((res) =>{\n                this.getTask();\n                this.setState({\n                    task: \"\",\n                });\n                console.log(res);\n            });\n        }\n    };\n\n    getTask = () => {\n        axios.get(endpoint + \"/api/tasks\").then((res) => {\n            if(res.data){\n                console.log(res.data)\n                this.setState({\n                    items: res.data.map((item)=>{\n                        let color = \"yellow\";\n                        let style ={\n                            wordWrap: \"break-word\",\n                        };\n                        if(item.status){\n                            color=\"green\";\n                            style[\"textDecorationLine\"] = \"line-through\"\n                        }\n                        return (\n                            <Card key={item._id} color={color} fluid className=\"rough\">\n                                <Card.Content>\n                                    <Card.Header textAlign=\"left\">\n                                        <div style={style}>{item.task}</div>\n                                    </Card.Header>\n    \n                                    <Card.Meta textAlign=\"right\">\n                                        <Icon\n                                            name=\"check circle\"\n                                            color=\"blue\"\n                                            onClick={() => this.updateTask(item._id)}                                        \n                                        />\n                                        <span style={{paddingRight: 10}}>Done</span>\n                                        <Icon\n                                            name=\"undo\"\n                                            color=\"yellow\"\n                                            onClick={() => this.undoTask(item._id)}\n                                        />\n                                        <span style={{paddingRight: 10}}>Undo</span>\n                                        <Icon\n                                            name=\"delete\"\n                                            color=\"red\"\n                                            onClick={() => this.deleteTask(item._id)}\n                                        />\n                                        <span style={{paddingRight: 10}}>Delete</span>\n                                    </Card.Meta>\n                                </Card.Content>\n                            </Card>\n                        );\n                    }),\n                });                \n            }else{\n                this.setState({\n                    items: [],\n                });\n            }        \n        });\n    };\n\n    updateTask = (id) => {\n        axios.put(endpoint + \"/api/tasks/\" + id, {\n            headers:{\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        }).then((res)=>{\n            console.log('update')\n            console.log(res);\n            this.getTask();\n        });\n    }\n\n    undoTask = (id) => {\n        axios.put(endpoint + \"/api/undoTask/\" + id, {\n            headers:{\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        }).then((res)=>{\n            console.log(res);\n            this.getTask();\n        }); \n    }\n    deleteTask = (id) => {\n        axios.delete(endpoint + \"/api/deleteTask/\" + id, {\n            headers:{\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n        }).then((res)=>{\n            console.log(res);\n            this.getTask();\n        }); \n    }\n\n\n    render(){\n        return(\n            <div>\n                <div className=\"row\">\n                    <Header className=\"header\" as=\"h2\" color=\"yellow\">\n                        To Do List\n                    </Header>\n                    <div>\n                        <Form onSubmit={this.onSubmit}>\n                            <Input \n                                type=\"text\"\n                                name=\"task\"\n                                onChange={this.onChange}\n                                value={this.state.task}\n                                fluid\n                                placeholder=\"Create Task\"\n                            />\n                        </Form>\n                    </div><br/>\n                    <div className=\"row\">\n                        <Card.Group>{this.state.items}</Card.Group>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;"]},"metadata":{},"sourceType":"module"}